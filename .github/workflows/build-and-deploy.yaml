name: Build And Deploy to Frontend
on:
  push:
    branches:
    #   - develop
      - hoge
    paths: 
        - "src/**"
        - "package.json"
        - "yarn.lock"
        - "next.config.mjs"
        - "tailwind.config.js"
        - "postcss.config.js"
        - "tsconfig.json"
        - "components.json"
        - "public/**"
  workflow_dispatch:
    inputs:
      branch:
        description: "Select branch to deploy"
        required: true
        default: "develop"
        type: choice
        options:
          - develop
env:
  AWS_REGION: ap-northeast-1
  AWS_ROLE_ARN: arn:aws:iam::${{ vars.DEVELOP_AWS_ACCOUNT }}:role/github-actions

  AWS_S3_BUCKET_NAME: wr-${{ vars.ENV }}-webapp
  SOURCE_DIR: ./.next

jobs:
  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    environment: develop
    timeout-minutes: 5
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        
      - name: debug
        run: |
          ls -al

      - name: Setup Node
        uses: actions/setup-node@v4.2.0
        with:
          node-version: 20.14.0 # https://github.com/actions/node-versions/releases
          cache: yarn

      - name: Dependency Install
        run: yarn install --frozen-lockfile # npm ci

      - name: Run ESLint
        run: yarn lint # npm run lint # 静的解析

      - name: Run Prettier
        run: yarn format # npm run format

      - name: Cache Next.js Build Output
        uses: actions/cache@v4.2.0
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock', '**/*.js', '**/*.ts', '**/*.tsx', '**/*.jsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Create .env file
        run: |
          echo "NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_GOOGLE_MAP_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_MAP_ID }}" >> .env

      # TODO: 削除予定
      - name: Verify .env file
        run: cat .env

      - name: Build
        run: yarn build # npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync ${{ env.SOURCE_DIR }} s3://${{ env.AWS_S3_BUCKET_NAME }}/ --delete --exclude '.*git*'

      - name: CloudFront Cache Clear
        run: |
          set -e  # エラー発生時に停止
          CFID=$(aws cloudfront list-distributions --query "DistributionList.Items[?contains(Origins.Items[*].DomainName, '${{ env.AWS_S3_BUCKET_NAME }}.s3.ap-northeast-1.amazonaws.com')].Id | [0]" --output text)
 
          if [[ -z "$CFID" || "$CFID" == "None" ]]; then
            echo "🚨 CloudFront Distribution ID が見つかりませんでした。"
            echo "🔍 確認ポイント:"
            echo "1. CloudFront の Origin に '${{ env.AWS_S3_BUCKET_NAME }}.s3.ap-northeast-1.amazonaws.com' が含まれているか？"
            echo "2. 'aws cloudfront list-distributions' で正しくバケットが設定されているか確認"
            exit 1
          fi
        
          echo "Invalidating CloudFront cache for distribution ID: $CFID"
          aws cloudfront create-invalidation --distribution-id "$CFID" --paths "/*"
